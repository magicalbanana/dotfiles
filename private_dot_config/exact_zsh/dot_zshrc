# vim: ft=zsh

source "${HOME}/.shtils"

echo-eval() { echo_eval "$@" }
echo-run() { echo_run "$@" }
safe-run() { safe_run "$@" }

echo-array() {
  local variable_name="${1:-path}"
  local count="${#${(P)variable_name}}"
  local width="${#count}"
  local i
  for i in {1..$count}; do
    echo "${(l:$width:)i}: ${${(P)variable_name}[$i]}"
  done
}

echo-assoc-array() {
  local key val var_name="$1"
  for key val ("${(@Pkv)var_name}"); do
    echo "$key -> $val"
  done
}

alias echo-path="echo-array path"
alias echo-fpath="echo-array fpath"

typeset -A ZI
ZI[BIN_DIR]="${ZDOTDIR}/.zi/bin"
source "${ZI[BIN_DIR]}/zi.zsh"

(( ${+_comps} )) && _comps[zi]=_zi

ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
zi ice wait"0a" lucid atload"_zsh_autosuggest_start"
zi light zsh-users/zsh-autosuggestions

zi ice wait"0b" lucid
zi light b4b4r07/enhancd

zi snippet OMZL::clipboard.zsh
zi snippet OMZL::directories.zsh

zi wait lucid for \
  z-shell/zsh-fancy-completions
zi ice lucid wait as"completion" blockf has"docker"
zi snippet OMZ::plugins/docker/docker.plugin.zsh
zi ice lucid wait as"completion" blockf has"docker-compose"
zi snippet OMZ::plugins/docker-compose/_docker-compose
zi ice lucid wait as"completion" blockf has"git"
zi snippet https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
zi ice lucid wait as"completion" blockf has"asdf"
zi snippet https://raw.githubusercontent.com/asdf-vm/asdf/master/completions/_asdf
zi ice lucid wait as"completion" blockf has"just"
zi snippet https://raw.githubusercontent.com/casey/just/master/completions/just.zsh
zi ice lucid wait as"completion" blockf has"fd"
zi snippet https://raw.githubusercontent.com/sharkdp/fd/master/contrib/completion/_fd
zi ice lucid wait as"completion" blockf has"rg"
zi snippet https://raw.githubusercontent.com/BurntSushi/ripgrep/master/complete/_rg
zi ice lucid wait as'completion' blockf has'rustc'
zi snippet https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/rust/_rustc
zi ice lucid wait as'completion' blockf has'cargo'
zi snippet https://github.com/rust-lang/cargo/blob/master/src/etc/_cargo
zi ice lucid wait as'completion' blockf has'ghq'
zi snippet https://github.com/x-motemen/ghq/blob/master/misc/zsh/_ghq
zi ice lucid wait as'completion' blockf has'mpv'
zi snippet https://github.com/mpv-player/mpv/blob/master/etc/_mpv.zsh

zi wait has'brew' pack atload=+"zicompinit_fast; zicdreplay" for brew-completions

zi ice lucid wait as'completion' blockf has'zellij'
zi snippet "$ZDOTDIR/completions/_zellij"

zi ice has"zoxide"
zi light z-shell/zsh-zoxide

zi ice wait lucid
zi load wfxr/forgit

zi ice wait'0' blockf lucid
zi light zsh-users/zsh-completions

zi ice wait"0" lucid;
zi load zdharma-continuum/history-search-multi-word

zi ice lucid wait"0" atclone"sed -ie 's/fc -rl 1/fc -rli 1/' shell/key-bindings.zsh" \
  atpull"%atclone" multisrc"shell/{completion,key-bindings}.zsh" id-as"junegunn/fzf_completions" \
  pick"/dev/null"
zi light junegunn/fzf

zi ice wait"1" lucid
zi light Aloxaf/fzf-tab

zi ice as"command" from"gh-r" \
  atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
  atpull"%atclone" src"init.zsh"
zi light starship/starship

zi ice lucid wait"1" lucid atload"!_zsh_autosuggest_start"
zi load "zsh-users/zsh-autosuggestions"
zi ice wait"1" atinit"zpcompinit; zpcdreplay" lucid
zi light zdharma-continuum/fast-syntax-highlighting
zi light zsh-users/zsh-history-substring-search
  zmodload zsh/terminfo
  [ -n "${terminfo[kcuu1]}" ] && bindkey "${terminfo[kcuu1]}" history-substring-search-up
  [ -n "${terminfo[kcud1]}" ] && bindkey "${terminfo[kcud1]}" history-substring-search-down
  bindkey -M emacs '^P' history-substring-search-up
  bindkey -M emacs '^N' history-substring-search-down
  bindkey -M vicmd 'k' history-substring-search-up
  bindkey -M vicmd 'j' history-substring-search-down

autoload -Uz compinit

if [ $(date +'%j') != $(date -r ${ZDOTDIR:-$HOME}/.zcompdump +'%j') ]; then
  compinit;
else
  compinit -C;
fi

if command -v kubectl >/dev/null 2>&1; then
  source <(kubectl completion zsh)
fi

if command -v helm >/dev/null 2>&1; then
  source <(helm completion zsh)
fi

if [ ! -d "${HOME}/.local/share/zsh" ]; then
  mkdir -p "${HOME}/.local/share/zsh"
fi
HISTFILE="${HOME}/.local/share/zsh/history"

# make some commands not show up in history
HISTIGNORE="ls:ll:la:cd:cd -:pwd:exit:date:* --help"
HISTSIZE=10000000
SAVEHIST=10000000

# setopts
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion
setopt hash_list_all          # hash everything before completion
setopt completealiases        # complete alisases
setopt always_to_end          # when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt nocorrect              # spelling correction for commands
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt nolisttypes
setopt listpacked
setopt automenu
setopt autocd                 # no need ot put CD when traversing directories
unsetopt BEEP
setopt vi

if command_exists docker; then
  if docker compose >/dev/null 2>&1; then
    alias dcomp="docker compose"
  else
    if command_exists docker-compose >/dev/null 2>&1; then
      alias dcomp="docker compose"
    fi
  fi
fi

if command_exists kubectl; then
  alias ktl="kubectl"
fi

if command_exists exa; then
  unalias -m 'll'
  unalias -m 'l'
  unalias -m 'la'
  unalias -m 'ls'
  alias ls='exa -G  --color auto --icons -a -s type'
  alias ll='exa -l --color always --icons -a -s type'
fi

if command_exists nvim; then
  unalias -m 'vim'
  alias vim='nvim'

  export VISUAL='nvim'
  export EDITOR='nvim'
fi

if command_exists bat; then
  unalias -m 'cat'
  alias cat='bat -pp'
fi

if command_exists broot; then
  br_path="${HOME}/.config/broot/launcher/bash/br"
  if [ -f "${br_path}" ]; then
    source "${br_path}"
  fi
fi

if [[ ! -d "${HOME}/.config/fzf/fzf-zsh-plugin" ]]; then
  echo-warn "fzf-zsh-plugin not found"
else
  source "/${HOME}/.config/fzf/fzf-zsh-plugin/fzf-zsh-plugin.plugin.zsh"
fi

source-env() {
  if [ $# -eq 0 ]; then
    echo "${usage}"
    exit 1
  fi

  for file in "$@"
  do
    if [ ! -f "${file}" ]; then
      echo-err "the given file : ${file} does not exist"
      exit 1
    fi

    source <(cat "${file}" | sed -n -e '/^#/d;/^\s*$/d' -e "s/'/'\\\''/g" -e "s/=\(.*\)/='\1'/g" -e 's/.*/export &/p')
  done
}

reload-shell() {
  exec zsh -il
}
